#pragma once

#include "networkManager.hpp"
#include "processing_manager.hpp"
#include <array>

namespace network
{
class httpClient : public observerInterface
{
  public:
	httpClient(network::networkManager* netManager, const char* url);

	void update(bool infoFlag) override;

	bool getAvailableDataFlag();

	void handle();

	void setURL(const char* url);

	bool postSensorData();

	void setMailBox(const char* pDataBuff);

  private:
	network::networkManager* _netManager;
	bool					 _availableDataFlag = false;
	const char*				 _pURL;

	/// @brief The http client acts as a consumer of the processingSubsystem (producer)
	/// sensor information is generated by processingSubsystem, and then pointer to it
	/// is
	const char* _pDataBuff = nullptr; /// Pointer to the buffer that has the sensors measurements and time measurements were taken
};
} // namespace network
